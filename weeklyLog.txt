Week 1
01/10/2019
Created my first prototype of the end effector of the robot using cardboard and some gears 
to demonstrate it's basic functionality
Have ordered electronic components online
-------------------------------------------------------------------------------------------
Week 2
13/10/2019
Configured DC motor to be controlled by a push button. Next thing to do is build a prototype
of robot gripper, to be controlled by the motor.
Also did a bit of configuring for the MPU-6050 accelerometer with the Teensy LC, whilst waiting for the
DC motors to arrive.
Getting the prototype of the gripper controlled by the motor is what I need to have done by the end of this month
to keep on schedule.
-------------------------------------------------------------------------------------------
Week 3
20/10/2019
Built my first semi-functioning prototype and have it being controlled by a push button using previous circuit.
This prototype needs more work and could possibly start building another version soon.
I need to incorporate the L293D IC chip to be able to open and close the gripper (move the dc motor both directions) 
Will order this week
-------------------------------------------------------------------------------------------
Week 4
24/10/2019
Implemented the L293D IC chip in hardware to act as a motor driver, allowing me to control the direction of the
motor. I was able to control the direction using two physical buttons, and also through software using PWM.
Next thing to do is to implement this on my prototype, so I can open and close the gripper with two buttons.

25/10/2019
Two push-buttons not working - tried to test them turning on an LED but they both seem to be damaged. Will need to
get some more next week. In the meantime, getting the flex sensors configured. Built a circuit where the flex 
sensor controls the brightness of an LED.

27/10/2019
Tested opening and closing my prototype 1.0 with two push-buttons. It works the moderately
well for the first couple tests, but then the output isn't as good. I noticed that my prototype is consuming a lot of
my 9V battery's power quite quickly, probably due to friction in the gears? Will need to keep in mind for next
prototype. 
Also configured a flex sensor and attached it to my glove. Works pretty well. Next thing to do is probably look at
making a better prototype that can display a better output than the current one.
-------------------------------------------------------------------------------------------
Week 5
1/11/2019
Servo motors arrived. These will be more suitable to my project as they are more accurate than DC motors. As I will
be reading in analog signals from the flex sensor, I can simply map this value to the servo and it works very well.

3/11/2019
Went about building Prototype 2.0 but realised once I finished building it that it wasn't the right mechanism.
However it did demonstrate to me that the servo motors are the better choice for the robot. 
-------------------------------------------------------------------------------------------
Week 6
4/11/2019
This week I'll focus on maybe making another prototype. The last prototype I made gears out of cardboard which
wasn't ideal, so I've ordered some plastic gears online to hopefully be here this week or next. I have attached most
of the flex sensors to my glove. Also waiting on a couple of Wi-fi modules. I will continue doing some research on 
optimizing my code in the Arduino IDE. Last week I was experimenting programming in an alternative IDE to arduino as
I jus't dont enjoy using the Arduino IDE too much. Programming in something like Atmel Studio would be nice as it would
just be plain C. However, I would be reading/writing directly to the registers of the ATMega326P on the Arduino Uno,
which could be more time consuming. This method would be more efficient in terms of memory, so I may have to consider this
at a later stage.
-------------------------------------------------------------------------------------------
Week 7 
16/11/2019
Was sick for the last week or so, so haven't made any progress until today. 
I had ordered some gears online to use for building the next prototype, but I'm not sure if they will arrive in time
for the demonstration in December. So I've built a prototype today that works quite well in demonstrating the 
mechanism of the gripper. I can control it from a flex sensor on the glove, I will upload a video of it working and 
post the link in the VideoLinks document.

17/11/2019
Put together a preliminary circuit for the glove module. It includes three flex sensors connected attached to the 
glove. I've uploaded some code that I've written to read the value of each flex sensor on each finger and calculate
the average, as this will be the value sent to the Servo motor. 
-------------------------------------------------------------------------------------------
Week 8
22/11/2019
Using the average value read from the three flex sensors can work well at times, and at other times be erratic and
give an inconsistent output. This was to be expected, as reading from three sensors rather than one, means the output
may not be as accurate. I think this is also down to the connections to the sensors - when opening and closing my hand,
the sensors can momentarily disconnect from the wires reading the data, causing some inaccuracy. This is something I 
will look to improve, either with the hardware connection, or maybe there is a better software solution.
Also, in my estimated timeline for the project, I was hoping to have the glove and prototype communicate wirelessly,
but after attempting to setup one of my Wi-fi modules, I ended up crashing my home router. So this is something I need
to spend more time at during December/January, so that I have a better idea of what is happening. Because of this, I
will hope to, instead, set up the accelerometer on the glove for the demo in December. This was orginally what I had planned 
to do in January. So I'm basically just swapping my estimations for December and January.

23/11/2019
I've added another servo to my prototype to control the roll of the gripper. It is controlled by an accelerometer that is
part of the glove module. I've uploaded a video of my first test of the prototype to be demonstrated in December. It still 
needs work. I am still getting an inconsistent output on the gripper due to the problems with reading the three flex sensors.
The roll works quite well.
I won't be adding anymore features to this prototype before the demo. I will focus on improving it's performance, optimizing 
my code in any way I can, and just prepare for the demo in general.
-------------------------------------------------------------------------------------------
Week 9
28/11/2019
I don't think I will be making any progress this week as I'm too busy with other modules at the moment.
I hope to dedicate atleast a few hours a day next week, in preparation for my demo on Monday week.
-------------------------------------------------------------------------------------------
Week 10
2/12/19
I tested each flex sensor individually to isolate the sensor causing the problems. It was the middle flex sensor, so
I have left it out during testing today. I hope to figure out tomorrow if it is a problem with the sensor, or just the
connection (more likely the latter). I have tested the prototype a number of times today whilst just reading two flex sensors.
I also added some code to constrain the values read from the flex sensors between a min and max. This means the output
isn't as sporadic, as sometimes the values read could spike or plummet. I noticed another small problem when testing -
sometimes one of the servos will just stop working. I think this is down to it not receiving enough power as the Teensy LC
operates at 3.3V. I don't think I need to worry too much about this at the moment as the servos will eventually be powered
by a controller with a higher operating voltage. I've uploaded a video of one of today's tests.

4/12/19
I read the raw values from all three flex sensors again to pin-point more accurate min and max values. I noticed that the middle
sensor (min-550, max-730) would jump to above 1000 when the finger is in an open position. This is definitely a hardware problem, 
but I've just used an if statement so see if it has gone over 1000, then set it to the minimum value 550 if it has. This works ok, 
so I'm not going to worry about this hardware problem until after the demonstration. I also noticed that the wire connections must 
be nice and snug to the flex sensors to get the most consistent output.

6/12/19
Found a youtube video that explains the MPU 6050 in more detail in terms of reading and writing from its registers. I have changed my
code to do this rather than use the example code for the MPU6050, as I feel it gives me a better understanding of what is happenning at
the lower level. Have also tidied my code up into seperate functions, rather than one long loop function.
-------------------------------------------------------------------------------------------
Week 11

20/01/20 (Hours spent: ~6)
The plan for the next week or two is to have all the functionality I had from first semester working with the ESP32. Then I can focus 
on wifi communication.
Tasks:
	-Read values of flex sensors using ESP32
	-Write values to servo motor

Reflection:
	-Managed to control servo motor using PWM

Issues:
	Hardware
		1. Noticed when trying to read flex sensor with ESP32 that the sensor needed to be bent in the opposite direction to which 
		 it would normally need to be in order to see a change in output, which was odd. Still unresolved
	Software
		2. Small issue. I get 'errors' saying some API variables 'cannot be resolved' even though I've included the required header 
		 files and code still builds and flashes to the ESP32 fine. Will need to be resolved eventually as it doesn't look good

26/01/20 (Hours spent: ~5)
Almost have full functionality from last semester now working with ESP32. All thats left to do is implement accelerometer, and can then work
on wireless communication.
-------------------------------------------------------------------------------------------
Week 12
27/01/20 (Hours spent: ~4)
	I spent today setting up the accelerometer and studying the esp-idf api reference for the I2c driver on the ESP32, to get a good understanding
	of the api functions and variables used to read and write to/from the MPU6050's accelerometer. 
	The next thing to do is to setup another ESP32, and have it receive the data read from the sensors with my original ESP32, using wifi.

28/01/20 (Hours spent: <1)
	Solution to issue 1 from 20/01/20: I needed to increase the attenuation value for the ADC channel reading the flex sensors. This allowed me to
	see a change in output, when the flex sensor is bent in the correct direction.
	
	Solution to issue 2 from 20/01/20: I was only including the header files that I thought were required. Instead I need to include all header files
	from the components folder of the esp-idf. For some reason they the include folders aren't included when I make a new ESP-IDF project, so have to 
	add them myself, but it only takes a minute.

29/01/20 (Hours spent: ~4)
Task: 	To setup one ESP32 module as an access point (this will be the module for the robot arm), and then setup my other ESP32 (glove module) 
	as a station, and have it send the data read from the sensors to the access point. I'll be following the ESP-IDF reference and a book on the
	ESP32 written by Neil Kolban.

	Managed to setup the ESP32 as an access point. I can see it when I search for networks on my phone, but I wasn't able to connect to it. It 
	seems as though it couldn't obtain the ESP32's IP address.
-------------------------------------------------------------------------------------------
Week 13
03/02/20 (Hours spent: ~6)
	The first two week sprint was about migrating everything done from 1st semester over to the ESP32 with the eclipse environment, and I managed
	to do so. The next two weeks are about achieving efficient wireless communication between the robot and glove. Looking at using ESP-NOW which
	is a wireless communication protocol designed by Espressif, mainly used for peer to peer communication. I have set up the robot as an access 
	point and was able to have the glove module connect to the access point as a station. I haven't been able to have them send data to each
	other yet.
	My thinking at the moment is that the 2 week sprint after this, will be for improving the performance of the project. i.e power management (may 
	look at low power modes, task management (freeing up stack space when a task isnt required anymore), making sure I'm allocating the right amount 
	of space on the stack for each task, making sure the priorites of my tasks are correct etc. 
	The final sprint (leading up to week 8) should hopefully be the assembly of the robot and soldering all my electronics to a perf-board.
	Hopefully I'll have the majority of this done, and can then focus on the deliverables (report, video and poster)